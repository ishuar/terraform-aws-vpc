name: Validation with Terraform
on:
  workflow_call:
    inputs:
      terraform-version:
        type: string
        required: false
        default: 1.5.4
        description: The Terraform Version Used for the Github action.

      only-destroy:
        type: boolean
        required: false
        default: false
        description: Condition to only activate the destroy job manually.

  pull_request:

env:
  TF_IN_AUTOMATION: true
  TF_INPUT: false

jobs:
  tfplan:
    if: '! ${{ inputs.only-destroy }}'
    name: TF Plan
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    strategy:
      matrix:
        ##* Update the list to update examples test.
        examples: ["simple", "bootstrap-routing"]
    outputs:
      exitCode: ${{ steps.plan.outputs.exitcode }}

    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-region: ${{ vars.AWS_REGION }}
          role-to-assume: ${{ vars.AWS_ROLE_ARN }}
          mask-aws-account-id: true
          unset-current-credentials: true

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ inputs.terraform-version }}

      - name: Terraform init and plan
        shell: bash
        id: plan
        working-directory: "${{ github.workspace }}/examples/${{ matrix.examples }}"
        run: |
          terraform init
          terraform validate
          terraform plan -out ${{ matrix.examples }}.tfplan -detailed-exitcode

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: "${{ matrix.examples }}.tfplan"
          path: "${{ github.workspace }}/examples/${{ matrix.examples }}/${{ matrix.examples }}.tfplan"

  tfapply:
    if: '( !cancelled() && !failure() && needs.tfplan.outputs.exitCode == 2 && ! ${{ inputs.only-destroy }} )'
    name: TF Apply
    runs-on: ubuntu-latest
    needs: tfplan
    strategy:
      matrix:
        ##* Update the list to update examples test
        examples: ["simple", "bootstrap-routing"]
    ## ? https://docs.github.com/en/actions/using-jobs/defining-outputs-for-jobs#overview
    outputs:
      exitCode: ${{ steps.apply.outputs.ExitCode }}
    steps:
      - name: checkout the repository
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ inputs.terraform-version }}

      - uses: actions/download-artifact@v3
        with:
          name: "${{ matrix.examples }}.tfplan"
          path: "${{ github.workspace }}/examples/${{ matrix.examples }}"

      - name: "Terraform Apply"
        shell: bash
        id: apply
        working-directory: "${{ github.workspace }}/examples/${{ matrix.examples }}"
        run: |
          terraform init
          terraform apply "${{ matrix.examples }}.tfplan"
          EXIT_CODE=$?

          echo "ExitCode=$EXIT_CODE" >> $GITHUB_OUTPUT

  tfdestroy:
    if: ${{ ( !cancelled() && !failure() && needs.tfapply.outputs.exitCode == 0 ) || inputs.only-destroy }}
    name: TF Destroy
    runs-on: ubuntu-latest
    needs: [tfplan, tfapply]
    strategy:
      matrix:
        ##* Update the list to update examples test
        examples: ["simple", "bootstrap-routing"]
    steps:
      - name: checkout the repository
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ inputs.terraform-version }}

      - name: "Terraform Destroy"
        shell: bash
        id: destroy
        working-directory: "${{ github.workspace }}/examples/${{ matrix.examples }}"
        run: |
          terraform init
          terraform destroy -auto-approve